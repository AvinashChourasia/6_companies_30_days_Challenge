
class Solution {

    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        
        int mat[][] = new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                mat[i][j] = (int)(1e9);
            }
        }
        for(int[] item:edges){
            int i = item[0];
            int j = item[1];
            int wt = item[2];
            mat[i][j] = wt;
            mat[j][i] = wt;
        }
        for(int i=0;i<n;i++){
            mat[i][i]=0;
        }
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(mat[i][k]==(int)(1e9) || mat[k][j]==(int)(1e9)){
                        continue;
                    }
                    mat[i][j] = Math.min(mat[i][j],mat[i][k]+mat[k][j]);
                }
            }
        }
        int count = n;
        int ans = -1;
        for(int i=0;i<n;i++){
            int c=0;
            for(int j=0;j<n;j++){
                if(mat[i][j]<=distanceThreshold && i!=j){
                    c++;
                }
            }
            if(c<=count){
                count=c;
                ans=i;
            }
        }
        return ans;
    }

}
